###服务端口号
server:
  servlet:
    encoding:
      force: true
      charset: utf-8
      enabled: true
  port: 8080
#  tomcat:
#    uri-encoding: UTF-8

###服务名称
spring:
  application:
    name: consul-client-test
  redis:
    host: 127.0.0.1
    port: 6379
    password: wjp930514.
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        # 健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        health-check-path: /check
        health-check-interval: 5s
        prefer-ip-address: true
        #instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${server.port}
        instance-id: ${spring.application.name}:${server.port}
        tags: url-prefix-/${spring.application.name}
        enabled: true # 是否开启注册发现服务
        service-name: ${spring.application.name}
        management-tags: url-prefix-/${spring.application.name}
        register: true  # 是否将服务注册到Consul集群中心
        deregister: false #服务停止时取消注册 跟网关组合
    gateway:
      discovery:
        locator:
          enabled: true #是否与服务发现组件进行组合，
          #通过serviceId转发到具体的服务实例。默认为false，若为true便开启基于服务发现的路由规则
          lower-case-service-id: true #当注册中心为Eureka时,设置为true标识开启用小写的serviceId进行基于服务路由转发
      routes:
        - id: clientb_route #在所有路由定义中需要唯一，不能重复
          uri: lb://consul-client-test # 目标服务地址 为固定写法，表示开启负载均衡； ** 即服务在 eureka 中注册的名字
          order: 2
          predicates:
            - Path=/clientb/**
          filters:
            - StripPrefix=1 #前缀， 在当前路径匹配中表示去掉第一个前缀 /notity
